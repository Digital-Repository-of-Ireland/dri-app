<% people = qdc_extract_people %>

<%= javascript_tag do %>
  window.roles = '<%= j grouped_options_for_select(@qdc_people_select_list) %>';
  window.form_action = '<%= action %>';
<% end %>

<% if params[:controller] == 'collections' %>
	<div class="dri_file_upload">
		<% unless @object.cover_image.blank? %>
			<div class="dri_cover_image_img">
				<%= image_tag cover_image_path(@object), width:"228" unless @object.cover_image.blank? %>
				<h2>Current Image</h2>
			</div>
		<% end %>
		<a class='btn btn-default' href='javascript:;'>
			<h4 class="dri_upload_file_text">
				<i class="fa fa-upload">&nbsp;</i>
				<%= "#{t('dri.views.fields.cover_image')}"%>
			</h4>
			<p>
				(228 x 128px)
			</p>
			<%= f.file_field :cover_image, class: "edit span6",
			onchange:'coverImageFileUploadHelper($(this));', accept: 'image/*' %>
			<h4 class='dri_cover_image_file' id="cover_image">
				No File
			</h4>
		</a>
	</div>
<% end %>

<!-- <h4><%#= t('dri.views.objects.legends.metadata') %></h4>-->
<% if update_desc_metadata?(@object.class.to_s) %>
	<fieldset id="title" class="dri_title_metadata_fieldset">
		<% if params[:controller] == 'collections' %>
		  <%= render "shared/form_fieldset_label", f:f, source:'collection_title' %>
		<% else %>
		  <%= render "shared/form_fieldset_label", f:f, source:'title' %>
		<% end%>

		<% @object.title.each do |i| %>
		  <div><%= f.text_field "title][", value:i, class: "edit span6 dri-textfield", required:'required', autofocus:true %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
	  <%= render "shared/form_add_text_field_button", action:%w(add title) %>
	</fieldset>

	<fieldset id="creator">
	  <%= render "shared/form_fieldset_label", f:f, source:'creator',
		  span_string:'dri.views.fields.creators' %>
    <% if @object.creator.size == 0 %>
      <div><%= f.text_field "creator][", value:'', class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
      </div>
    <% end %>
    <% @object.creator.each do |i| %>
      <div><%= f.text_field "creator][", value:i, class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
      </div>
    <% end %>
    <%= render "shared/form_add_text_field_button", action:%w(add creator) %>
	</fieldset>

	<%# contributors %>
	<fieldset id="roles">
		<%= render "shared/form_fieldset_label", f:f, source:'roles' %>

	    <% if people.length > 0 %>
	      <% people.each do |key, value_array| %>
			    <% value_array.each do |value| %>
			      <div>
				      <select id="digital_object_roles][type][" name="digital_object[roles][type][]">
	                    <%= grouped_options_for_select(@qdc_people_select_list, key) %>
				      </select>
				      <%= f.text_field "roles][name][", value:value, class: "edit span6 dri-textfield" %>
						  <%= render "shared/form_remove_field_button" %>
			      </div>
	        <% end %>
	      <% end %>
	    <% end %>

	    <%# doesn't match add_text_field partial structure %>
		<p class="add-person-fields">
		  <i class="fa fa-plus">&nbsp;</i><a model-name="digital_object" title="Add Role"><%= t('dri.views.objects.forms.add_role') %></a>
		</p>
	</fieldset>

	<fieldset id="date_group">
		<fieldset id="date">
		  <%= render "shared/form_fieldset_label", f:f, source:'date' %>
			<% if @object.date.size == 0 %>
			  <div>
				  <%= f.text_field "date][", value:'', class: "edit span6 dri-textfield date-group" %>
				  <%= render "shared/form_remove_field_button" %>
			  </div>
			<% end %>
			<% @object.date.each do |i| %>
			  <div>
				  <%= f.text_field "date][", value:i, class: "edit span6 dri-textfield date-group" %>
				  <%= render "shared/form_remove_field_button" %>
			  </div>
			<% end %>

	    <%= render "shared/form_add_text_field_button", action:%w(add date) %>
		</fieldset>
		<fieldset id="creation_date">
		  <%= render "shared/form_fieldset_label", f:f, source:'creation_date' %>
			<% if @object.creation_date.size == 0 %>
			  <div>
				  <%= f.text_field "creation_date][", value:'', class: "edit span6 dri-textfield date-group" %>
				  <%= render "shared/form_remove_field_button" %>
			  </div>
			<% end %>
			<% @object.creation_date.each do |i| %>
			  <div>
				  <%= f.text_field "creation_date][", value:i, class: "edit span6 dri-textfield date-group" %>
				  <%= render "shared/form_remove_field_button" %>
			  </div>
			<% end %>

	    <%= render "shared/form_add_text_field_button", action:%w(add creation date) %>
		</fieldset>
		<fieldset id="published_date">
		  <%= render "shared/form_fieldset_label", f:f, source:'published_date' %>
			<% if @object.published_date.size == 0 %>
			  <div><%= f.text_field "published_date][", value:'', class: "edit span6 dri-textfield date-group" %>
				  <%= render "shared/form_remove_field_button" %>
			  </div>
			<% end %>
			<% @object.published_date.each do |i| %>
			  <div><%= f.text_field "published_date][", value:i, class: "edit span6 dri-textfield date-group" %>
				  <%= render "shared/form_remove_field_button" %>
			  </div>
			<% end %>
	    <%= render "shared/form_add_text_field_button", action:%w(add published date) %>
		</fieldset>
	</fieldset>

	<fieldset id="description" class="dri_description_metadata_fieldset dri_form_multiline_block">
	  <%= render "shared/form_fieldset_label", f:f, source:'description' %>
		<% @object.description.each do |i| %>
		  <div><%= f.text_area "description][", value:i, class: "edit span6 dri-textarea", required:'required'  %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>

    <%= render "shared/form_add_text_field_button", input_type: 'textarea', action:%w(add description) %>
	</fieldset>

	<fieldset id="rights" class="dri_rights_metadata_fieldset dri_form_multiline_block">
	    <%= render "shared/form_fieldset_label", f:f, source:'rights' %>
		<% if @object.rights.size == 0 %>
			<div>
				<%= f.text_area "rights][", value:'', class: "edit span6 dri-textarea", required:'required'  %>
				<%= render "shared/form_remove_field_button" %>
			</div>
		<% end %>
		<% @object.rights.each do |i| %>
		  <div><%= f.text_area "rights][", value:i, class: "edit span6 dri-textarea", required:'required'  %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
        <%= render "shared/form_add_text_field_button", input_type: 'textarea', action:%w(add rights) %>
	</fieldset>

	<%# we don't want the Collection type to be output as we don't want it modified %>

	<fieldset id="type" <% if @object.type.first == 'Collection' || params[:is_sub_collection] == 'true' %>class="dri_no_display"<%end%>>
	  <%= render "shared/form_fieldset_label", f:f, source:'types' %>
		<% if @object.type.size == 0%>

		<select id="digital_object_type][" name="digital_object[type][]" style="width: 200px; background-color: white" onkeydown="fnKeyDownHandler_A(this, event);" onkeyup="fnKeyUpHandler_A(this, event); return false;" onkeypress="return fnKeyPressHandler_A(this, event);" onchange="fnChangeHandler_A(this);" onfocus="fnFocusHandler_A(this);">
			<option value="" style="color:grey;">Select/Enter Object Type</option>
      <option value="Image">Image</option>
      <option value="Moving Image">Moving Image</option>
      <option value="Sound">Sound</option>
      <option value="Text">Text</option>
      <option value="3D">3D</option>
      <option value="Dataset">Dataset</option>
      <option value="Software">Software</option>
    </select>

		<% end %>
		<% @object.type.each do |i| %>
		  <div><%= f.text_field "type][", value:i, class: "edit span6 dri-textfield", required: "true"  %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
    <%= render "shared/form_add_text_field_button", action:%w(add type) %>
	</fieldset>

	<fieldset id="language">
	  <%= render "shared/form_fieldset_label",
		  f:f, source:'languages', help_string:'dri.help.fields.languages' %>
		<% @object.language.each do |i| %>
		  <div><%= f.text_field "language][", value:i, class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
    <%= render "shared/form_add_text_field_button", action:%w(add language) %>
	</fieldset>

	<fieldset id="relation">
    <% if params[:controller] == 'collections' %>
		  <%= render "shared/form_fieldset_label",
			  f:f, source:'related',
			  help_string:'dri.help.fields.relations_text' %>
    <% else %>
		  <%= render "shared/form_fieldset_label", f:f, source:'relations' %>
    <% end %>
		<% @object.relation.each do |i| %>
		  <div><%= f.text_field "relation][", value:i, class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
    <%= render "shared/form_add_text_field_button", action:%w(add relation) %>
	</fieldset>

  <% if params[:controller] != 'collections' %>
		<fieldset id="source">
		  <%= render "shared/form_fieldset_label", f:f, source:'sources' %>
			<% @object.source.each do |i| %>
			  <div><%= f.text_field "source][", value:i, class: "edit span6 dri-textfield" %>
				  <%= render "shared/form_remove_field_button" %>
			  </div>
			<% end %>
	    <%= render "shared/form_add_text_field_button", action:%w(add source) %>
		</fieldset>
  <% end %>

	<fieldset id="coverage">
		<%= render "shared/form_fieldset_label", f:f, source:'coverages' %>
		<%= render "shared/autocomplete_dropdown" %>
	  <% @object.coverage.each do |i| %>
		  <div>
			  <%= f.text_field "coverage][", value:i, class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
    <%= render "shared/form_add_text_field_button", action:%w(add coverage) %>
	</fieldset>

	<fieldset id="geographical_coverage">
	  <%= render "shared/form_fieldset_label", f:f, source:'geographical_coverages' %>
	  <%= render "shared/autocomplete_dropdown", default:'Logainm' %>
		<% @object.geographical_coverage.each do |i| %>
		  <div>
			  <%= f.text_field "geographical_coverage][", value:i, class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
    <%= render "shared/form_add_text_field_button", action:%w(add place) %>
	</fieldset>

	<fieldset id="temporal_coverage">
	  <%= render "shared/form_fieldset_label", f:f,
	  source:'temporal_coverage', span_sting:'dri.views.fields.temporal_coverages'  %>
	  <%= render "shared/autocomplete_dropdown" %>
		<% @object.temporal_coverage.each do |i| %>
		  <div>
			  <%= f.text_field "temporal_coverage][", value:i, class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
		<%# title and action don't match so can't use current button partial %>
		<p class="add-text-field">
			<i class="fa fa-plus">&nbsp;</i>
			<a model-name="digital_object" title="Add Subject (Era)">
				<%= t('dri.views.objects.forms.add_temporal_coverage') %>
			</a>
		</p>
	</fieldset>

	<fieldset id="subject">
	  <%= render "shared/form_fieldset_label", f:f, source:'subjects' %>
	  <%= render "shared/autocomplete_dropdown", default:'LOC Subject Headings' %>
		<% @object.subject.each do |i| %>
		  <div>
			  <%= f.text_field "subject][", value:i, class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
        <%= render "shared/form_add_text_field_button", action:%w(add subject) %>
	</fieldset>

	<fieldset id="identifier">
	  <%= render "shared/form_fieldset_label", f:f, source:'identifiers' %>
		<% @object.identifier.each do |i| %>
		  <div><%= f.text_field "identifier][", value:i, class: "edit span6 dri-textfield" %>
			  <%= render "shared/form_remove_field_button" %>
		  </div>
		<% end %>
		<p class="add-text-field">
			<i class="fa fa-plus">&nbsp;</i><a model-name="digital_object" title="Add Identifier"><%= t('dri.views.objects.forms.add_identifier') %></a>
		</p>
	</fieldset>

  <% if params[:controller] != 'collections' && params[:is_sub_collection] != 'true' %>
		<fieldset id="format">
		  <%= render "shared/form_fieldset_label", f:f, source:'formats' %>
			<%= render "shared/autocomplete_dropdown" %>
			<% @object.format.each do |i| %>
			  <div><%= f.text_field "format][", value:i, class: "edit span6 dri-textfield" %>
				  <%= render "shared/form_remove_field_button" %>
			  </div>
			<% end %>
			<p class="add-text-field">
				<i class="fa fa-plus">&nbsp;</i><a model-name="digital_object" title="Add Format"><%= t('dri.views.objects.forms.add_format') %></a>
			</p>
		</fieldset>
  <% end %>
<% end %>

<script language="JavaScript"> 
  function fnLeftToRight(getdropdown)
  {
    getdropdown.style.direction = "ltr";
  }

  function fnRightToLeft(getdropdown)
  {
    getdropdown.style.direction = "rtl";
  }

  function FindKeyCode(e)
  {
    if(e.which)
    {
    keycode=e.which;
    }
    else
    {
    keycode=e.keyCode;
    }
    return keycode;
  }

  function FindKeyChar(e)
  {
    keycode = FindKeyCode(e);
    if((keycode==8)||(keycode==127))
    {
    character="backspace"
    }
    else if((keycode==46))
    {
    character="delete"
    }
    else
    {
    character=String.fromCharCode(keycode);
    }
    return character;
  }

</script>

<script language="JavaScript"> 

  var vEditableOptionIndex_A = 0;
  var vEditableOptionText_A = "Select an option / Enter Object Type";
  var vUseActualTexbox_A = "no";
  var vPreviousSelectIndex_A = 0;
  var vSelectIndex_A = 0;
  var vSelectChange_A = 'MANUAL_CLICK';

  function fnSanityCheck_A(getdropdown)
  {
    if(vEditableOptionIndex_A>(getdropdown.options.length-1))
    {
    alert("PROGRAMMING ERROR: The value of variable vEditableOptionIndex_... cannot be greater than (length of dropdown - 1)");
    return false;
    }
  }

  function fnKeyDownHandler_A(getdropdown, e)
  {
    fnSanityCheck_A(getdropdown);
    var vEventKeyCode = FindKeyCode(e);
    if(vEventKeyCode == 37)
    {
      fnLeftToRight(getdropdown);
    }
    if(vEventKeyCode == 39)
    {
      fnRightToLeft(getdropdown);
    }
    if(vEventKeyCode == 46)
    {
      if(getdropdown.options.length != 0)
      {
        if (getdropdown.options.selectedIndex == vEditableOptionIndex_A)
        {
          getdropdown.options[getdropdown.options.selectedIndex].text = '';
          getdropdown.options[getdropdown.options.selectedIndex].value = '';
        }
      }
    }
    if(vEventKeyCode == 8 || vEventKeyCode == 127)
    {
      if(getdropdown.options.length != 0)
      {
        if (getdropdown.options.selectedIndex == vEditableOptionIndex_A)
        {
           if ((getdropdown[vEditableOptionIndex_A].text == vEditableOptionText_A)||(getdropdown[vEditableOptionIndex_A].value == vEditableOptionText_A))
           {
             getdropdown.options[getdropdown.options.selectedIndex].text = '';
             getdropdown.options[getdropdown.options.selectedIndex].value = '';
           }
           else
           {
             getdropdown.options[getdropdown.options.selectedIndex].text = getdropdown.options[getdropdown.options.selectedIndex].text.slice(0,-1);
             getdropdown.options[getdropdown.options.selectedIndex].value = getdropdown.options[getdropdown.options.selectedIndex].value.slice(0,-1);
           }
        }
      }
      if(e.which) 
      {
        e.which = '';
      }
      else
      {
        e.keyCode = '';
      }
      if (e.cancelBubble)
      {
        e.cancelBubble = true;
        e.returnValue = false;
      }
      if (e.stopPropagation)
      {
          e.stopPropagation();
      }
      if (e.preventDefault)
      {
      	e.preventDefault();
      }
    }
  }

  function fnFocusHandler_A(getdropdown)
  {
    if ( (navigator.userAgent.toLowerCase().search(/android|ipad|iphone|ipod/) > -1) || (vUseActualTexbox_A == 'yes') )
    {
      if (getdropdown[(vEditableOptionIndex_A)].selected == true)
      {
        document.getElementById('textboxoption_A').style.visibility='';
        document.getElementById('textboxoption_A').style.display='';
      }
      else
      {
        document.getElementById('textboxoption_A').style.visibility='hidden';
        document.getElementById('textboxoption_A').style.display='none';
      }
    }
  }

  function fnChangeHandler_A(getdropdown)
  {
    fnSanityCheck_A(getdropdown);

    vPreviousSelectIndex_A = vSelectIndex_A;

    vSelectIndex_A = getdropdown.options.selectedIndex;

    if ((vPreviousSelectIndex_A == (vEditableOptionIndex_A)) && (vSelectIndex_A != (vEditableOptionIndex_A))&&(vSelectChange_A != 'MANUAL_CLICK'))
    {
      getdropdown[(vEditableOptionIndex_A)].selected=true;
      vPreviousSelectIndex_A = vSelectIndex_A;
      vSelectIndex_A = getdropdown.options.selectedIndex;
      vSelectChange_A = 'MANUAL_CLICK';
    }

    if ( (navigator.userAgent.toLowerCase().search(/android|ipad|iphone|ipod/) > -1) || (vUseActualTexbox_A == 'yes') )
    {
      fnFocusHandler_A(getdropdown);
    }
  }

  function fnKeyPressHandler_A(getdropdown, e)
  {
    fnSanityCheck_A(getdropdown);

    keycode = FindKeyCode(e);
    keychar = FindKeyChar(e);
    if ((keycode>47 && keycode<59)||(keycode>62 && keycode<127) ||(keycode==32))
    {
      var vAllowableCharacter = "yes";
    }
    else
    {
      var vAllowableCharacter = "no";
    }

    if(getdropdown.options.length != 0)
      if (getdropdown.options.selectedIndex == (vEditableOptionIndex_A))
      {
        var vEditString = getdropdown[vEditableOptionIndex_A].value;
        if(vAllowableCharacter == "yes")
        {
          if ((getdropdown[vEditableOptionIndex_A].text == vEditableOptionText_A)||(getdropdown[vEditableOptionIndex_A].value == vEditableOptionText_A))
            vEditString = "";
        }

        if (vAllowableCharacter == "yes")
        {
          vEditString+=String.fromCharCode(keycode);
          var i=0;
          var vEnteredChar = String.fromCharCode(keycode);
          var vUpperCaseEnteredChar = vEnteredChar;
          var vLowerCaseEnteredChar = vEnteredChar;

          if(((keycode)>=97)&&((keycode)<=122))
            vUpperCaseEnteredChar = String.fromCharCode(keycode - 32);
          if(((keycode)>=65)&&((keycode)<=90))
            vLowerCaseEnteredChar = String.fromCharCode(keycode + 32);
          if(e.which)
          {
            for (i=0;i<=(getdropdown.options.length-1);i++)
            {
              if(i!=vEditableOptionIndex_A)
              {
                var vEnteredDigitNumber = getdropdown[vEditableOptionIndex_A].text.length;
                var vFirstReadOnlyChar = getdropdown[i].text.substring(0,1);
                var vEquivalentReadOnlyChar = getdropdown[i].text.substring(vEnteredDigitNumber,vEnteredDigitNumber+1);
                if (vEnteredDigitNumber >= getdropdown[i].text.length)
                {
                    vEquivalentReadOnlyChar = vFirstReadOnlyChar;
                }
                if( (vEquivalentReadOnlyChar == vUpperCaseEnteredChar)||(vEquivalentReadOnlyChar == vLowerCaseEnteredChar)
                  ||(vFirstReadOnlyChar == vUpperCaseEnteredChar)||(vFirstReadOnlyChar == vLowerCaseEnteredChar) )
                {
                  vSelectChange_A = 'AUTO_SYSTEM';
                  break;
                }
                else
                {
                  vSelectChange_A = 'MANUAL_CLICK';
                }
              }
            }
          }
        }
        getdropdown.options[vEditableOptionIndex_A].text = vEditString;
        getdropdown.options[vEditableOptionIndex_A].value = vEditString;

        return false;
      }
    return true;
  }

  function fnKeyUpHandler_A(getdropdown, e)
  {
    fnSanityCheck_A(getdropdown);

    if(e.which)
    {
      if(vSelectChange_A == 'AUTO_SYSTEM')
      {
        getdropdown[(vEditableOptionIndex_A)].selected=true;
        vSelectChange_A = 'MANUAL_CLICK';
      }

      var vEventKeyCode = FindKeyCode(e);
      if((vEventKeyCode == 37)||(vEventKeyCode == 39))
      {
        getdropdown[vEditableOptionIndex_A].selected=true;
      }
    }
  }
</script>